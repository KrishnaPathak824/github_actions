name: Build Docker image and Push

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.json"

env:
  REGISTRY: jhinga
  FRONTEND_IMAGE_NAME: frontend
  BACKEND1_IMAGE_NAME: backend1
  BACKEND2_IMAGE_NAME: backend2
  DATABASE_IMAGE_NAME: database

jobs:
  release:
    if: github.event_name == 'push' || github.event_name == 'workflow_run'
    name: Create Git Tag & Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          VERSION=$(git describe --tags --abbrev=0)
          echo "Latest tag is $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend1 (main)
        uses: docker/build-push-action@v5
        with:
          context: ./backend1
          file: ./backend1/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:latest

      - name: Build & push backend2 (main)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5

        with:
          context: ./backend2
          file: ./backend2/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:latest

      - name: Build & push frontend (main)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest

      - name: Build & push database(main)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./database
          file: ./database/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.DATABASE_IMAGE_NAME }}:${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.DATABASE_IMAGE_NAME }}:latest
