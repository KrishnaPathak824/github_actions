name: PR check and Build Docker image and Push

on:
  push:
    branches:
      - dev
    paths-ignore:
      - "**.md"
      - "**.json"
  pull_request:
    branches:
      - dev
    paths-ignore:
      - "**.md"
      - "**.json"

env:
  REGISTRY: jhinga
  FRONTEND_IMAGE_NAME: frontend
  BACKEND1_IMAGE_NAME: backend1
  BACKEND2_IMAGE_NAME: backend2
  DATABASE_IMAGE_NAME: database

jobs:
  pr-check:
    if: github.event_name == 'pull_request'
    name: PR check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Conventional Commit Lint
        uses: webiny/action-conventional-commits@v1.3.0
        with:
          allowed-commit-types: "feat,fix,docs,style,refactor,test,chore,ci,perf,revert"

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Display current branch
        run: echo "Checking PR from ${{ github.head_ref }} to ${{ github.base_ref }}"

  build-and-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: backend1
            context: ./backend1
            dockerfile: ./backend1/Dockerfile
            image: ${{ env.BACKEND1_IMAGE_NAME }}
          - name: backend2
            context: ./backend2
            dockerfile: ./backend2/Dockerfile
            image: ${{ env.BACKEND2_IMAGE_NAME }}
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            image: ${{ env.FRONTEND_IMAGE_NAME }}
          - name: database
            context: ./database
            dockerfile: ./database/Dockerfile
            image: ${{ env.DATABASE_IMAGE_NAME }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.service.image }}:dev-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ matrix.service.image }}:dev-latest
          cache-from: type=gha,scope=${{ matrix.service.name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service.name }}

      - name: Complete workflow
        if: matrix.service.name == 'database'
        run: echo "Workflow completed"
