name: Build Docker image and Push

on:
  workflow_run:
    workflows: ["Release-dev"]
    types:
      - completed
    paths-ignore:
      - "**.md"
      - "**.json"

env:
  REGISTRY: jhinga
  FRONTEND_IMAGE_NAME: frontend
  BACKEND1_IMAGE_NAME: backend1
  BACKEND2_IMAGE_NAME: backend2
  DATABASE_IMAGE_NAME: database

jobs:
  backend1:
    runs-on: [backend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          VERSION=$(git describe --tags --abbrev=0)
          echo "Latest tag is $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend1
        uses: docker/build-push-action@v5
        with:
          context: ./backend1
          file: ./backend1/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:dev-${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:dev-latest
          # cache-from: type=local,src=/tmp/.buildx-cache-backend1
          # cache-to: type=local,dest=/tmp/.buildx-cache-backend1,mode=max

  backend2:
    runs-on: [backend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          VERSION=$(git describe --tags --abbrev=0)
          echo "Latest tag is $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend2
        uses: docker/build-push-action@v5

        with:
          context: ./backend2
          file: ./backend2/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:dev-${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:dev-latest
          # cache-from: type=local,src=/tmp/.buildx-cache-backend2
          # cache-to: type=local,dest=/tmp/.buildx-cache-backend2,mode=max

  frontend:
    name: Frontend build and push
    runs-on: [frontend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          VERSION=$(git describe --tags --abbrev=0)
          echo "Latest tag is $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:dev-${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:dev-latest
          # cache-from: type=local,src=/tmp/.buildx-cache-frontend
          # cache-to: type=local,dest=/tmp/.buildx-cache-frontend,mode=max

  database:
    name: Database build and push
    runs-on: [frontend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          VERSION=$(git describe --tags --abbrev=0)
          echo "Latest tag is $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & push database
        uses: docker/build-push-action@v5
        with:
          context: ./database
          file: ./database/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.DATABASE_IMAGE_NAME }}:dev-${{ steps.get_tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.DATABASE_IMAGE_NAME }}:dev-latest
          # cache-from: type=local,src=/tmp/.buildx-cache-database
          # cache-to: type=local,dest=/tmp/.buildx-cache-database,mode=max
      - name: Complete workflow
        run: echo "Workflow completed"
